<<<<<<< HEAD
=======
// TODO nf-core: Once you have added the required tests, please run the following command to build this file:
// nf-core modules test htodemux
>>>>>>> 83d76b1b1 (push test)
nextflow_process {

    name "Test Process HTODEMUX"
    script "../main.nf"
    process "HTODEMUX"

    tag "modules"
    tag "modules_nfcore"
    tag "htodemux"

<<<<<<< HEAD
    test("seuratObject - rds") {
=======
    // TODO nf-core: Change the test name preferably indicating the test-data and file-format used
    test("sarscov2 - bam") {

        // TODO nf-core: If you are created a test for a chained module
        // (the module requires running more than one process to generate the required output)
        // add the 'setup' method here.
        // You can find more information about how to use a 'setup' method in the docs (https://nf-co.re/docs/contributing/modules#steps-for-creating-nf-test-for-chained-modules).

     //   config './nextflow.config'
>>>>>>> 83d76b1b1 (push test)

        when {
            process {
                """
<<<<<<< HEAD
                input[0] = [
                    [ id:'test'], // meta map
                    file(params.modules_testdata_base_path + '/genomics/homo_sapiens/10xgenomics/cellranger/hashing_demultiplexing/htodemux.rds', checkIfExists: true),
                    "HTO"
=======
                // TODO nf-core: define inputs of the process here. Example:

                input[0] = [
                    [ id:'test'], // meta map
<<<<<<< HEAD
                    file('/Users/luisheinzlmeier/Downloads/htodemux_hadge_process/htodemux.rds', checkIfExists: true),
>>>>>>> 83d76b1b1 (push test)
=======
                    file(params.modules_testdata_base_path + '/genomics/homo_sapiens/10xgenomics/cellranger/hashing_demultiplexing/htodemux.rds', checkIfExists: true),
>>>>>>> 13a700cb5 (use uploaded test data set)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
<<<<<<< HEAD
=======
                //TODO nf-core: Add all required assertions to verify the test output.
                // See https://nf-co.re/docs/contributing/tutorials/nf-test_assertions for more information and examples.
>>>>>>> 83d76b1b1 (push test)
            )
        }

    }

<<<<<<< HEAD
    test("seuratObject - rds - stub") {
=======
    // TODO nf-core: Change the test name preferably indicating the test-data and file-format used but keep the " - stub" suffix.

    /*
    test("sarscov2 - bam - stub") {
>>>>>>> 83d76b1b1 (push test)

        options "-stub"

        when {
            process {
                """
<<<<<<< HEAD
                input[0] = [
                    [ id:'test'], // meta map
                    file(params.modules_testdata_base_path + '/genomics/homo_sapiens/10xgenomics/cellranger/hashing_demultiplexing/htodemux.rds', checkIfExists: true),
                    "HTO"
=======
                // TODO nf-core: define inputs of the process here. Example:

                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bam/test.paired_end.sorted.bam', checkIfExists: true),
>>>>>>> 83d76b1b1 (push test)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
<<<<<<< HEAD
=======
                //TODO nf-core: Add all required assertions to verify the test output.
>>>>>>> 83d76b1b1 (push test)
            )
        }

    }
<<<<<<< HEAD
=======
    */

>>>>>>> 83d76b1b1 (push test)
}
